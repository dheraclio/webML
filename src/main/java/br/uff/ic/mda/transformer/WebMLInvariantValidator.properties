#WebML Invariants

#Page package

# Objetive: A page cannot be directly nested into a SiteView and into an Area at the same time.
# Original version
# context Page inv:
# self.allInstances->forAll(p1, p2|p1.oclIsKindOf(SiteViewElement) and p2.oclIsKindOf(AreaElement)
# implies SiteView.allInstances->any(true).elements=p1 and Area.allInstances->any(true).elements=p2 and p1<>p2)
#pageNestting = Page.allInstances()->select(p : Page | p.landmark = true)->\
#forAll(p | SiteView.allInstances()->asOrderedSet()->first().elements->includes(p) \
#or Area.allInstances()->asOrderedSet()->first().elements->includes(p))

# Objetive: If a page is marked as "landmark", it must be contained in a parent element of suitable type.
# Original version
# context Page inv:
# self.landmark=true implies
# SiteView.allInstances->any(true).elements=self or Area.allInstances->any(true).elements=self
#pageLandMarkParentType = Page.landmark=true implies SiteView.allInstances->\
#any(true).elements=Page or Area.allInstances->any(true).elements=Page

# Objetive: Only one page can be marked as "home" for a Siteview.
# Original version
# context SiteView inv:
# self.allInstances->forAll(s| s.homepage->size()=1)
#pageUniqueHome = SiteView.allInstances->forAll(s| s.homepage->size()=1)

# NonContextualLink

# Objetive: A non-contextual link can be the source of any ContentUnit
#(apart from a GetUnit) and the target of any Unit
# Original version
# context NonContextualLink inv:
# self.sourceUnit.oclIsKindOf(ContentUnit)
# and not self.sourceUnit.oclIsKindOf(GetUnit)
# and self.targetUnit.oclIsKindOf(ContentUnit)
#NonContextualLink = \
#NonContextualLink.sourceUnit.oclIsKindOf(ContentUnit) and \
#NonContextualLink.targetUnit.oclIsKindOf(ContentUnit) and \
#not NonContextualLink.sourceUnit.oclIsKindOf(GetUnit)

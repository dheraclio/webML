#WebML Invariants

#Page package

# Objetive: A page cannot be directly nested into a SiteView and into an Area at the same time.
# Original version
# context Page inv:
# self.allInstances->forAll(p1, p2|p1.oclIsKindOf(SiteViewElement) and p2.oclIsKindOf(AreaElement)
# implies SiteView.allInstances->any(true).elements=p1 and Area.allInstances->any(true).elements=p2 and p1<>p2)
#verifyPageNesting = WEBML_Page.allInstances()->forAll(p1, p2|\
#p1.oclIsKindOf(WEBML_SiteViewElement) and p2.oclIsKindOf(WEBML_AreaElement) and \
#p1 == p2)->size()=0

# Objetive: If a page is marked as "landmark", it must be contained in a parent element of suitable type.
# Original version
# context Page inv:
# self.landmark=true implies
# SiteView.allInstances->any(true).elements=self or Area.allInstances->any(true).elements=self
pageLandMarkParentType = WEBML_Page.allInstances()->select(p : WEBML_Page | p.landmark = true)->\
forAll(p | WEBML_SiteView.allInstances()->asOrderedSet().elements->includes(p) \
or WEBML_Area.allInstances()->asOrderedSet().elements->includes(p))

# Objetive: Only one page can be marked as "home" for a Siteview.
# Original version
# context SiteView inv:
# self.allInstances->forAll(s| s.homepage->size()=1)
#verifyPageUniqueHome = WEBML_SiteView.allInstances->forAll(s| s.homePage->size()=1)
#verifyPageUniqueHome = WEBML_SiteView.allInstances->forAll(s | if s.homePage = true then s.homepage.size() = 1 else true endif)

# NonContextualLink

# Objetive: A non-contextual link can be the source of any ContentUnit
#(apart from a GetUnit) and the target of any Unit
# Original version
# context NonContextualLink inv:
# self.sourceUnit.oclIsKindOf(ContentUnit)
# and not self.sourceUnit.oclIsKindOf(GetUnit)
# and self.targetUnit.oclIsKindOf(ContentUnit)
#verifyNonContextualLink = \
#WEBML_NonContextualLink.sourceUnit.oclIsKindOf(WEBML_ContentUnit) and \
#WEBML_NonContextualLink.targetUnit.oclIsKindOf(WEBML_ContentUnit) and \
#not WEBML_NonContextualLink.sourceUnit.oclIsKindOf(WEBML_GetUnit)
